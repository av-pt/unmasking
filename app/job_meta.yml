# Unmasking tool config file for defining default unmasking meta
# classification parameters.
#
# These values can be overridden via job-specific configuration files
# You can append % to the names of objects or lists in your job config
# to inherit from this default configuration.
#
# You can use variables starting with $ for values which are defined
# in job.experiment.configurations. The definition consists of a list
# of values for this variable, each representing a separate experiment
# configuration. The specified aggregator will be used to aggregate
# results of multiple configurations.

---

# Defaults for job configuration
job:
  # Default model to use for unmasking meta classification
  model:
    name: meta.model.LinearMetaClassificationModel
    parameters:
      # Sample discard threshold
      threshold: 0.1  # everything where it's less sure than 10% is not classified. Try increasing, maybe Precision and maybe maybe improve Recall (bc. we classify more samples).
      # threshold is minimal distance from the hyperplane

  # Output directory
  # output_dir: <output_dir>

  # Meta model selection parameters
  model_selection:
    # Aggregator for aggregating run repetitions of individual configurations
    aggregator:
      name: output.aggregators.CurveAverageAggregator

  # Output formats for specific events and optional parameters.
  # For events you can specify the name and optionally a list of senders to listen to.
  outputs:
    # Visualize training curves
    - name: output.formats.ModelCurvePlotter

      # Plot RC file path relative to the application directory.
      # This configures basic plot parameters such as used markers and colors
      # or dynamic matplotlib settings.
      rc_file: plot_rc.yml

      # Other parameters (settings here take precedence of the RC file)
      parameters:
        # Do not display live plot, only write final image to disk
        display: false
        title: "Training data"

      events:
        - name: onModelFit

    # Visualize predicted data
    - name: output.formats.ModelCurvePlotter
      rc_file: plot_rc.yml
      parameters:
        display: false # true
        title: "Predicted data"

      events:
        - name: onDataPredicted

    # Print model prediction metrics
    - name: output.formats.ModelMetricsPrinter
      events:
        - name: onDataPredicted

#     Print cross-validation status
    - name: output.formats.ProgressBar
      events:
        - name: onFoldEvaluated
